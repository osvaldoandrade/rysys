package br.com.codecompany.rysys.fgl.test.annotation;import br.com.codecompany.rysys.api.annotation.GenericRequestPopulator;import br.com.codecompany.rysys.api.annotation.GenericResponsePopulator;import br.com.codecompany.rysys.api.annotation.ParserInfo;import org.junit.Before;import br.com.codecompany.rysys.api.annotation.PopulatorHelper;import br.com.codecompany.rysys.api.annotation.RequestPopulator;import br.com.codecompany.rysys.api.annotation.ResponsePopulator;import br.com.codecompany.rysys.api.executor.ExecutionResult;import br.com.codecompany.rysys.fgl.annotation.FglParserInfo;import br.com.codecompany.rysys.fgl.executor.FglExecutionResult;public abstract class FglTestHelper {	protected ExecutionResult result;	protected PopulatorHelper helper;	@Before	public void setUp() {		ParserInfo info = new FglParserInfo();		RequestPopulator requestPopulator = new GenericRequestPopulator(info);		ResponsePopulator responsePopulator = new GenericResponsePopulator(info);		helper = new PopulatorHelper(requestPopulator, responsePopulator);        StringBuffer message = new StringBuffer();        message.append("<rysys type=\"2\">");        message.append("<protocolVersion>1</protocolVersion>");        message.append("<adapterType>1</adapterType>");        message.append("<commandType>4</commandType>");        message.append("<libraryPath>isisf001</libraryPath>");        message.append("<function>");        message.append("<name>libisisf001.so</name>");        message.append("<results>");		message.append(results());		message.append("</results>");        message.append("</function>");        message.append("</rysys>");		result = new FglExecutionResult(message.toString());	}	protected String results() {		StringBuffer results = new StringBuffer();		// tipo inteiro		results.append("<result>");        results.append("<name></name>");		results.append("<type>1</type>");		results.append("<value><![CDATA[-1234]]></value>");        results.append("</result>");		// tipo float		results.append("<result>");        results.append("<name></name>");		results.append("<type>2</type>");		results.append("<value><![CDATA[34.89]]></value>");        results.append("</result>");		// tipo string		results.append("<result>");        results.append("<name></name>");		results.append("<type>4</type>");		results.append("<value><![CDATA[ANDRE DANTAS ROCHA]]></value>");        results.append("</result>");		// tipo date		results.append("<result>");		results.append("<name></name>");		results.append("<type>5</type>");		results.append("<value><![CDATA[2008-03-12]]></value>");		results.append("</result>");		return results.toString();	}}